__cls__: KillerQuest
_cls: KillerQuest
doc    : Примеры квестов

list_icon: static/img/quests/icons/players_kill.png

first_state: begin
current_state: ~

caption: Охота за головами
text: |
    Убивайте

#    text_short = StringField(tags='client', caption=u'Короткий текст квеста', doc=u'Может строиться и меняться по шаблону')
#    typename = StringField(tags='client', caption=u'Тип квеста', doc=u'Может быть произвольным')
#    list_icon = StringField(tags='client', caption=u'Пиктограмма для списков', doc=u'Мальенькая картинка для отображения в списках')  # todo: use UrlField
#    level = IntField(tags='client', caption=u'Уровень квеста', doc=u'Обычно число, но подлежит обсуждению')  # todo: обсудить
#    starttime = DateTimeField(tags='client', caption=u'Начало выполнения', doc=u'Время старта квеста')
#    deadline = DateTimeField(tags='client', caption=u'Срок выполнения этапа', doc=u'datetime до провала текущего этапа. Может меняться')

#    hirer = UniReferenceField(tags='client', caption=u'Заказчик', doc=u'NPC-заказчик квеста')
#    town = UniReferenceField(tags='client', caption=u'Город выдачи', doc=u'Город выдачи квеста')
#    agent = UniReferenceField(tags='client', caption=u'Агент', doc=u'Исполнитель квеста')

on_generate: |
    # todo: реализовать метод same_as для проверки похожести квестов
    for q in agent and agent.quests or []:
        if q.parent == quest.parent:
            if q.status is None:
                raise Cancel("QUEST CANCEL: You already have that unstarted quest: {q}")

            if q.status == 'active':
                raise Cancel("QUEST CANCEL: You already have more <<quest.active_count_max>> copies of that quest.")

    quest.init_level()
    quest.init_targets_info()
    quest.init_deadline()

    # Рассчитываем общую награду квеста - зависит от уровня квеста (за каждый лвл + 10%)
    quest.total_reward_money = quest.count_to_kill * quest.price_victim * (1 + quest.level / 10.)
    quest.generate_reward()  # Устанавливаем награду за квест (карму, деньги и итемы)
    quest.init_text()


on_start: |
    if quest.get_available_lvl() < quest.level:
        quest.npc_replica(npc=quest.hirer, replica=u"NPC не достаточно хорошо к Вам относится.", event=event)
        log("KillerQuest: User have not enough relation")
        raise Cancel("KillerQuest: User have not enough relation")
    quest.starttime = event.time
    # Создание ноты для квеста
    quest.wanted_note_uid = agent.add_note(
        quest_uid=quest.uid,
        note_class=NPCWantedNote,
        time=event.time,
        npc=quest.hirer,
        page_caption='Задание на убийство',
    )

    # Создание таймера deadline на убийство
    if quest.deadline:
        set_timer(name='deadline_killer_quest', delay=quest.deadline)


states:
    - id: begin
      parent: reg:///registry/quest_states/test/begin

      on_event: |
          if isinstance(event, OnKill):
              if (event.agent.karma <= quest.max_karma_victims) and (not quest.unique_victims or event.agent not in quest.victims):
                  quest.victims.append(event.agent)
                  if len(quest.victims) >= quest.count_to_kill:
                      go('note_kill_reward')

          if isinstance(event, OnTimer) and event.name == 'deadline_killer_quest':
              agent.del_note(uid=quest.wanted_note_uid, time=event.time)
              go("deadline_fail")

          if isinstance(event, OnCancel):
              penalty_money = quest.reward_money / 2
              if agent.balance >= penalty_money:
                  agent.del_note(uid=quest.wanted_note_uid, time=event.time)
                  agent.set_balance(time=event.time, delta=-penalty_money)
                  quest.log(text=u'Уплачен штраф в размере {}nc.'.format(penalty_money), event=event, position=quest.hirer.hometown.position)
                  go("cancel_fail")
              else:
                 quest.npc_replica(npc=quest.hirer, replica=u"Для отказа от квеста заплатите штраф {}nc.".format(penalty_money), event=event)


    - id: note_kill_reward
      parent: reg:///registry/quest_states/test/begin
      
      on_event: |
          if isinstance(event, OnNote):
              if (quest.wanted_note_uid == event.note_uid) and (event.result == True):
                  agent.del_note(uid=quest.wanted_note_uid, time=event.time)
                  go('reward')

    # todo: если будет ещё один квест с точно таким же состоянием, но отличающимся нпц, то вынести стейт отдельно и
    # просто его наследовать, при этом в on_generate прописывать поле reward_npc
    - id: reward
      parent: reg:///registry/quest_states/test

      on_enter: |
          quest.agent.set_balance(time=event.time, delta=quest.reward_money)
          quest.agent.set_karma(time=event.time, dvalue=quest.reward_karma)
          quest.log(text=u'Получено вознаграждение в размере {:.0f}nc. и {:.0f} кармы'.format(quest.reward_money, quest.reward_karma), event=event, position=quest.recipient.hometown.position)
          agent.set_relationship(time=event.time, npc=quest.hirer, dvalue=2)  # изменение отношения к нпц
          if len(quest.reward_items) > 0:
              quest.reward_note_uid = agent.add_note(
                  quest_uid=quest.uid,
                  note_class=NPCRewardItemsNote,
                  time=event.time,
                  npc=quest.hirer,
                  page_caption=u'Награда',
                  btn1_caption=u'<br>Забрать',
              )
          else:
              go('win')

      on_event: |
          if isinstance(event, OnNote):
              if (event.note_uid == quest.reward_note_uid) and (event.result == True):
                  if quest.give_items(items=quest.reward_items, event=event):
                      agent.del_note(uid=quest.reward_note_uid, time=event.time)
                      go('win')
                  else:
                      quest.npc_replica(npc=quest.hirer, replica=u"Не хватает места в инвентаре.", event=event)


    - id: cancel_fail
      parent: reg:///registry/quest_states/final/fail/cancel
      on_enter: |
          quest.log(text=u'Квест провален: отказ от выполнения.', event=event)

    - id: deadline_fail
      parent: reg:///registry/quest_states/final/fail
      on_enter: |
          agent.set_relationship(time=event.time, npc=quest.hirer, dvalue=-quest.level * 2)  # изменение отношения c нпц
          quest.log(text=u'Квест провален: время вышло.', event=event)

    - id: win
      parent: reg:///registry/quest_states/final/win
      on_enter: |
          quest.log(text=u'Квест выполнен.', event=event)
