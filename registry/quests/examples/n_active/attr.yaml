__cls__: Quest
doc    : Примеры квестов

first_state: begin
current_state: ~

caption: Особый квест №{quest.active_count} из {quest.active_count_max}
text: |
    Многоразовый квест, но не более {quest.active_count_max} активных в одни руки.
    Квест выдается заходе в город если:
        - его нет среди "выданных, но не взятых"
        - если таких квестов активно не более {quest.active_count_max}

#    text_short = StringField(tags='client', caption=u'Короткий текст квеста', doc=u'Может строиться и меняться по шаблону')
#    typename = StringField(tags='client', caption=u'Тип квеста', doc=u'Может быть произвольным')
#    list_icon = StringField(tags='client', caption=u'Пиктограмма для списков', doc=u'Мальенькая картинка для отображения в списках')  # todo: use UrlField
#    level = IntField(tags='client', caption=u'Уровень квеста', doc=u'Обычно число, но подлежит обсуждению')  # todo: обсудить
#    starttime = DateTimeField(tags='client', caption=u'Начало выполнения', doc=u'Время старта квеста')
#    deadline = DateTimeField(tags='client', caption=u'Срок выполнения этапа', doc=u'datetime до провала текущего этапа. Может меняться')

#    hirer = UniReferenceField(tags='client', caption=u'Заказчик', doc=u'NPC-заказчик квеста')
#    town = UniReferenceField(tags='client', caption=u'Город выдачи', doc=u'Город выдачи квеста')
#    agent = UniReferenceField(tags='client', caption=u'Агент', doc=u'Исполнитель квеста')

on_generate: |
    log("GENERATE: try - {quest}")

    active_count = 0
    # todo: реализовать метод same_as для проверки похожести квестов
    for q in agent and agent.quests or []:
        if q.parent == quest.parent:
            if q.status is None:
                raise Cancel("QUEST CANCEL: You already have that unstarted quest: {q}")

            if q.status == 'active':
                active_count += 1
                if active_count > quest.active_count_max:
                    raise Cancel("QUEST CANCEL: You already have more {quest.active_count_max} copies of that quest.")

    quest.active_count = active_count + 1
    log("GENERATE: done - {quest}")


states:
    - id: begin
      parent: reg:///registry/quest_states/test/begin

      on_event: |
        quest.current_count += 1
        log("STATE({state.id}) EVENT({event!r}): now {quest.current_count!r} kills")
        if quest.current_count >= quest.kills_count:
            log("  Well done! go to final")
            go('final')
        else:
            log("  That's not enough to finish. Need to {quest.kills_count}")


    - id: final
      parent: reg:///registry/quest_states/final/win


### специфические параметры ###

active_count_max: 5
active_count: 0
