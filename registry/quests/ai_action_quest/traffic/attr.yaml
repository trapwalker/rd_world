__cls__: AIActionTraffic
_cls: AIActionTraffic
doc    : Квест AIActionTraffic

first_state: wait_car
current_state: ~

caption: AI Quest
text: Ai Quest

on_generate: |
    pass

on_start: |
    quest.dc.attacke_target = None
    if not quest.route:
        log('Error!!! AIActionTraffic without route')
    # log('start_quest!')

states:
    - id: wait_car
      parent: reg:///registry/quest_states/test/begin
      on_enter: |
          log('wait car on _enter')
          if agent.profile._agent_model.car:
              go('patrol')
          else:
              set_timer(name='wait_car', delay=10)

      on_event: |
          if isinstance(event, OnAppendCar) and agent.profile._agent_model.car:
              go('patrol')

          if isinstance(event, OnTimer) and event.name == 'wait_car':
              if agent.profile._agent_model.car:
                  go('patrol')
              else:
                  go('fail')

    - id: patrol
      parent: reg:///registry/quest_states/test/begin
      on_enter: |
          log('patrol on _enter')
          car = agent.profile._agent_model.car
          if car:
              car_pos = car.position(event.time)
              target_pos = quest.route.nearest_point(car_pos)
              car.set_motion(time=event.time, cc=1.0, target_point=target_pos)
              set_timer(name='patrol', delay=5)
          else:
              log('Car for agent {} not found'.format(agent.login))
              go('fail')

      on_event: |
          if isinstance(event, OnTimer) and event.name == 'patrol':
              car = agent.profile._agent_model.car
              if car:
                  # Хил по необходимости
                  set_timer(name='patrol', delay=3)

                  if car.hp(time=event.time) < 20:
                      quest.use_heal(time=event.time)

                  car_pos = car.position(event.time)
                  if quest.route.need_next_point(car_pos):
                     target_pos = quest.route.next_point()
                     if target_pos:
                        car.set_motion(time=event.time, cc=1.0, target_point=target_pos)
                     else:  # Если нет следующей точки, значит мы закончили маршрут и квест завершён
                        go('win')

              else:
                  log('Car for agent {} not found'.format(agent.login))
                  go('fail')

          if isinstance(event, OnDie):
              go('fail')

          if isinstance(event, OnAISee):
              if agent.profile._agent_model.is_target(target=event.obj):
                  quest.dc.attacke_target = event.obj
                  go('attacke')

    - id: attacke
      parent: reg:///registry/quest_states/test/begin
      on_enter: |
          car = agent.profile._agent_model.car
          if car:
              agent.profile._agent_model.car.set_motion(time=event.time, cc=0.3 + random.random() * 0.3, target_point=quest.dc.attacke_target.position(time=event.time))
              set_timer(name='attacke', delay=3)
          else:
              log('Car for agent {} not found'.format(agent.login))
              go('fail')

      on_event: |
          if isinstance(event, OnTimer) and event.name == 'attacke':
              car = agent.profile._agent_model.car
              if car:
                  # Преследование
                  target_pos = quest.dc.attacke_target.position(time=event.time)
                  target_pos = target_pos.random_point(target_pos, 50)
                  car.set_motion(time=event.time, cc=0.3 + random.random() * 0.3, target_point=target_pos)

                  # Залповая стрельба
                  for sector in car.fire_sectors:
                      if sector.is_discharge() and sector._test_target_in_sector(target=quest.dc.attacke_target, time=event.time):
                          car.fire_discharge(side=sector.side, time=event.time)

                  # Хил по необходимости
                  if car.hp(time=event.time) < 20:
                      quest.use_heal(time=event.time)

                  set_timer(name='attacke', delay=3)
              else:
                  log('Car for agent {} not found'.format(agent.login))
                  go('fail')

          if isinstance(event, OnDie):
              go('fail')

          if isinstance(event, OnAIOut):
              if event.obj is quest.dc.attacke_target:
                  quest.dc.attacke_target = None
                  vo_list = agent.profile._agent_model.get_all_visible_objects()
                  for vo in vo_list:
                      if agent.profile._agent_model.is_target(target=vo):
                          quest.dc.attacke_target = vo
                          break
                  if quest.dc.attacke_target:
                      go('attacke')
                  else:
                      go('patrol')

    - id: win
      parent: reg:///registry/quest_states/final/win

    - id: fail
      parent: reg:///registry/quest_states/final/fail