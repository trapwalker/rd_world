__cls__: DeliveryQuestSimple
_cls: DeliveryQuestSimple

caption: Доставка груза

on_generate: |
    if not quest.can_generate(event):
        raise Cancel("QUEST CANCEL: reason: generate rules")

    quest.init_level()
    quest.recipient = random.choice(quest.recipient_list)
    quest.init_delivery_set()

    cost_delivery_items = 0
    for item in quest.delivery_set:
        cost_delivery_items += item.base_price * item.amount / item.stack_size

    if quest.recipient.hometown is None:
        raise Cancel("QUEST CANCEL: {} hometown is None.".format(quest.recipient.hometown))
    if quest.hirer.hometown is None:
        raise Cancel("QUEST CANCEL: {} hometown is None.".format(quest.hirer.hometown))

    distance = quest.init_distance()
    quest.init_deadline(distance)

    distance_cost = round(distance / 1000)  # todo: уточнить стоимость 1px пути

    if distance_cost == 0:
        log('Delivery Quest: Warning!!! Distance from hirer<{!r}> to recipient<{!r}> = {}. Change recipient'.format(quest.hirer, quest.recipient, distance))

    quest.total_reward_money = quest.total_delivery_money_coef * cost_delivery_items + distance_cost
    quest.generate_reward()  # Устанавливаем награду за квест (карму, деньги и итемы)
    quest.init_text(distance) # Инициализируем строку описания квеста

on_start: |
    if quest.get_available_lvl() < quest.level:
        quest.npc_replica(npc=quest.hirer, replica=u"NPC не достаточно хорошо к Вам относится.", event=event)
        log("DELIVERY QUEST: User have not enough relation")
        raise Cancel("QUEST CANCEL: User have not enough relation")
    if not quest.give_items(items=quest.delivery_set, event=event):
        quest.npc_replica(npc=quest.hirer, replica=u"Не хватает места в инвентаре.", event=event)
        log("DELIVERY QUEST: User have not enough empty slots")
        raise Cancel("QUEST CANCEL: User have not enough empty slot")

    quest.log(text=u'Начат квест по доставке.', event=event, position=quest.hirer.hometown.position)
    temp_log_str = u'От {} получены следующие предметы: {}.'.format(
        quest.hirer.title,
        ', '.join([item.title for item in quest.delivery_set])
    )
    quest.log(text=temp_log_str, event=event, position=quest.hirer.hometown.position)

states:
    - id: begin
      parent: reg:///registry/quest_states/test/begin
      on_enter: |
          quest.dc.delivery_note_uid = agent.profile.add_note(
              quest_uid=quest.uid,
              note_class=NPCDeliveryNote,
              time=event.time,
              npc=quest.recipient,
              page_caption="Доставка<br>груза",
          )
          go('delivery')

    - id: delivery
      parent: reg:///registry/quest_states/test
      on_enter: |
          set_timer(name='deadline', delay=quest.deadline)
      on_event: |
          if isinstance(event, OnNote):
              if (event.note_uid == quest.dc.delivery_note_uid) and (event.result == True) and quest.take_items(items=quest.delivery_set, event=event):
                  temp_log_str = u'{} забрал следующие предметы: {}.'.format(
                      quest.recipient.title,
                      ', '.join([item.title for item in quest.delivery_set])
                  )
                  quest.log(text=temp_log_str, event=event, position=quest.recipient.hometown.position)
                  agent.profile.del_note(uid=quest.dc.delivery_note_uid, time=event.time)
                  go('reward')
          if isinstance(event, OnTimer) and (event.name == 'deadline'):
              agent.profile.del_note(uid=quest.dc.delivery_note_uid, time=event.time)
              go("fail")
          if isinstance(event, OnCancel):
              if quest.can_take_items(items=quest.delivery_set, event=event) and (agent.profile.balance >= (quest.reward_money / 2)):
                  agent.profile.del_note(uid=quest.dc.delivery_note_uid, time=event.time)
                  quest.take_items(items=quest.delivery_set, event=event)
                  agent.profile.set_balance(time=event.time, delta=-(quest.reward_money / 2))

                  temp_log_str = u'{} забрал следующие предметы: {}.'.format(
                      quest.hirer.title,
                      ', '.join([item.title for item in quest.delivery_set])
                  )
                  quest.log(text=temp_log_str, event=event, position=quest.hirer.hometown.position)
                  quest.log(text=u'Уплачен штраф в размере {}nc.'.format(quest.reward_money / 2), event=event, position=quest.hirer.hometown.position)

                  go("cancel_fail")
              else:
                 quest.npc_replica(npc=quest.hirer, replica=u"Для отказа от квеста верните итемы и заплатите штраф {}nc.".format(quest.reward_money / 2), event=event)

    - id: reward
      parent: reg:///registry/quest_states/test
      on_enter: |
          quest.agent.profile.set_balance(time=event.time, delta=quest.reward_money)
          quest.log(text=u'Получено вознаграждение в размере {}nc.'.format(quest.reward_money), event=event, position=quest.recipient.hometown.position)
          quest.agent.profile.set_exp(time=event.time, dvalue=quest.reward_exp)
          quest.agent.profile.set_karma(time=event.time, dvalue=quest.reward_karma)
          agent.profile.set_relationship(time=event.time, npc=quest.hirer, dvalue=quest.reward_relation_hirer)  # изменение отношения к нпц
          if len(quest.reward_items) > 0:
              quest.dc.reward_note_uid = agent.profile.add_note(
                  quest_uid=quest.uid,
                  note_class=NPCRewardItemsNote,
                  time=event.time,
                  npc=quest.recipient,
                  page_caption=u'Награда',
                  btn1_caption=u'<br>Забрать',
              )
          else:
              go('win')

      on_event: |
          if isinstance(event, OnNote):
              if (event.note_uid == quest.dc.reward_note_uid) and (event.result == True):
                  if quest.give_items(items=quest.reward_items, event=event):
                      agent.profile.del_note(uid=quest.dc.reward_note_uid, time=event.time)
                      go('win')
                  else:
                      quest.npc_replica(npc=quest.hirer, replica=u"Не хватает места в инвентаре.", event=event)

    - id: cancel_fail
      parent: reg:///registry/quest_states/final/fail/cancel
      on_enter: |
          quest.log(text=u'Квест провален.', event=event)

    - id: win
      parent: reg:///registry/quest_states/final/win
      on_enter: |
          quest.log(text=u'Квест выполнен.', event=event)

    - id: fail
      parent: reg:///registry/quest_states/final/fail
      on_enter: |
          agent.profile.set_relationship(time=event.time, npc=quest.recipient, dvalue=-quest.level * 2)  # изменение отношения c нпц
          agent.profile.set_relationship(time=event.time, npc=quest.hirer, dvalue=-quest.level * 2)  # изменение отношения c нпц
          quest.agent.profile.set_karma(time=event.time, dvalue=-quest.reward_karma)  # todo: изменение кармы
          quest.log(text=u'Квест провален.', event=event)
